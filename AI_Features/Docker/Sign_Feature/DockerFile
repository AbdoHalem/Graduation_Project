# Use the official Raspberry Pi OS base image with Python 3.9
FROM python:3.9-bullseye

# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC
ENV DISPLAY=:0


# Install system dependencies and build tools
RUN apt-get update && apt-get install -y \
    # libatlas-base-dev libopenblas-dev \
    # libhdf5-dev libhdf5-serial-dev liblapack-dev \
    libjpeg-dev libpng-dev \
    libtiff-dev libwebp-dev ffmpeg \
    # build-essential gfortran cmake pkg-config \
    libglib2.0-0 libgtk-3-dev \
    # OpenCV GUI/backends
    python3-opencv libgtk-3-0 libgl1-mesa-glx \
    # V4L2 support for Pi CSI camera
    v4l-utils libv4l-dev \
    # X11 client so cv2.imshow can connect to the host display
    x11-apps nano \
    && rm -rf /var/lib/apt/lists/*

# Force all V4L2 opens through libv4l2
ENV LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libv4l2.so.0

# Set the working directory
WORKDIR /app

# Upgrade pip to help fetch pre-built wheels if available
RUN pip install --upgrade pip setuptools wheel

# Copy the requirements file
COPY requirements.txt /app/requirements.txt

# Install the dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code
COPY DockerFile,Sign_Publisher_V2.0.py,detection_model,recognition_model  /app

# Expose the port the app runs on
EXPOSE 6000

# Command to run the application
CMD ["python", "Sign_Publisher_V2.0.py"]
